version: '3.7'

services:
  traefik:
    image: "traefik:latest"
    container_name: "kite-prod-traefik"
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    networks:
      - kite-prod-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  directus:
    image: directus/directus:latest
    container_name: kite-prod-directus
    ports:
      - 8056:8055
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/database:/directus/database
      - ./directus/extensions:/directus/extensions
    environment:
      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'

      DB_CLIENT: 'sqlite3'
      DB_FILENAME: 'database/database.sql'

      ADMIN_EMAIL: 'vscode@kite.dev'
      ADMIN_PASSWORD: 'directus'
    networks:
      - kite-prod-network
    labels:
      traefik.enable: true
      traefik.http.routers.diectus.entrypoints: web
      traefik.http.routers.diectus.rule: Host(`admin.localhost`)
      traefik.http.routers.diectus-router.service: diectus-service
      traefik.http.services.diectus-service.loadbalancer.server.port: 8055

  sveltekit:
    container_name: kite-prod-sveltekit
    build:
      dockerfile: docker/sveltekit/Dockerfile
      context: ../app/build
    restart: unless-stopped
    networks:
      - kite-prod-network

  nginx:
    container_name: kite-prod-nginx
    build:
      dockerfile: docker/nginx/Dockerfile
      context: ../app/build
    restart: unless-stopped
    networks:
      - kite-prod-network
    depends_on:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.nginx.entrypoints: web
      traefik.http.routers.nginx.rule: Host(`localhost`)
      traefik.http.routers.nginx-router.service: nginx-service
      traefik.http.services.nginx-service.loadbalancer.server.port: 3001

networks:
  kite-prod-network:
    driver: bridge
